{"version":3,"file":"three-geojson-geometry.js","sources":["../node_modules/earcut/src/earcut.js","../src/interpolateLine.js","../src/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","const getInterpolatedVals = (start, end, numPnts) => {\n  const result = [];\n\n  for (let i=1; i <= numPnts; i++) {\n    result.push(start + (end - start) * i / (numPnts + 1));\n  }\n\n  return result;\n};\n\nconst interpolateLine = (lineCoords = [], maxDegDistance = 1) => {\n  const result = [];\n\n  let prevPnt = null;\n  lineCoords.forEach(pnt => {\n    if (prevPnt) {\n      const dist = Math.sqrt(Math.pow(pnt[0] - prevPnt[0], 2) + Math.pow(pnt[1] - prevPnt[1], 2));\n\n      if (dist > maxDegDistance) {\n        const numAdditionalPnts = Math.floor(dist / maxDegDistance);\n\n        const lngs = getInterpolatedVals(prevPnt[0], pnt[0], numAdditionalPnts);\n        const lats = getInterpolatedVals(prevPnt[1], pnt[1], numAdditionalPnts);\n\n        for (let i=0, len=lngs.length; i<len; i++) {\n          result.push([lngs[i], lats[i]]);\n        }\n      }\n    }\n\n    result.push(prevPnt = pnt);\n  });\n\n  return result;\n};\n\nexport default interpolateLine;\n","import {\n  BufferGeometry,\n  Float32BufferAttribute,\n  Geometry\n} from 'three';\n\nconst THREE = window.THREE\n  ? window.THREE // Prefer consumption from global THREE, if exists\n  : {\n  BufferGeometry,\n  Float32BufferAttribute,\n  Geometry\n};\n\nimport earcut from 'earcut';\n\nimport interpolateLine from './interpolateLine';\n\nfunction GeoJsonGeometry(geoJson, radius = 1, resolution = 5) {\n  THREE.BufferGeometry.call(this);\n\n  this.type = 'GeoJsonGeometry';\n\n  this.parameters = {\n    geoJson,\n    radius,\n    resolution\n  };\n\n  // process various geometry types\n  const groups = ({\n    Point: genPoint,\n    MultiPoint: genMultiPoint,\n    LineString: genLineString,\n    MultiLineString: genMultiLineString,\n    Polygon: genPolygon,\n    MultiPolygon: genMultiPolygon\n  }[geoJson.type] || (() => []))(geoJson.coordinates, radius);\n\n  // concat groups\n  let indices = [], vertices = [];\n  let groupCnt = 0;\n  groups.forEach(newG => {\n    const prevIndCnt = indices.length;\n    concatGroup({ indices, vertices }, newG);\n\n    this.addGroup(prevIndCnt, indices.length - prevIndCnt, groupCnt++);\n  });\n\n  // build geometry\n  indices.length && this.setIndex(indices);\n  vertices.length && this.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n\n  //\n\n  function genPoint(coords, r) {\n    const vertices = polar2Cartesian(coords[1], coords[0], r);\n    const indices = [];\n\n    return [{ vertices, indices }];\n  }\n\n  function genMultiPoint(coords, r) {\n    const result = { vertices: [], indices: [] };\n\n    coords.map(c => genPoint(c, r)).forEach(([newPnt]) => {\n      concatGroup(result, newPnt);\n    });\n\n    return [result];\n  }\n\n  function genLineString(coords, r) {\n    const coords3d = interpolateLine(coords, resolution)\n      .map(([lng, lat]) => polar2Cartesian(lat, lng, r));\n\n    const { vertices } = earcut.flatten([coords3d]);\n\n    const numPoints = Math.round(vertices.length / 3);\n\n    const indices = [];\n\n    for (let vIdx = 1; vIdx < numPoints; vIdx++) {\n      indices.push(vIdx - 1, vIdx);\n    }\n\n    return [{ vertices, indices }];\n  }\n\n  function genMultiLineString(coords, r) {\n    const result = { vertices: [], indices: [] };\n\n    coords.map(c => genLineString(c, r)).forEach(([newLine]) => {\n      concatGroup(result, newLine);\n    });\n\n    return [result];\n  }\n\n  function genPolygon(coords, r) {\n    const coords3d = coords\n      .map(coordsSegment => interpolateLine(coordsSegment, resolution)\n        .map(([lng, lat]) => polar2Cartesian(lat, lng, r)));\n\n    // Each point generates 3 vertice items (x,y,z).\n    const { vertices, holes } = earcut.flatten(coords3d);\n\n    const firstHoleIdx = holes[0] || Infinity;\n    const outerVertices = vertices.slice(0, firstHoleIdx);\n    const holeVertices = vertices.slice(firstHoleIdx);\n\n    const holesIdx = new Set(holes);\n\n    const numPoints = Math.round(vertices.length / 3);\n\n    const outerIndices = [], holeIndices = [];\n    for (let vIdx = 1; vIdx < numPoints; vIdx++) {\n      if (!holesIdx.has(vIdx)) {\n        if (vIdx < firstHoleIdx) {\n          outerIndices.push(vIdx - 1, vIdx)\n        } else {\n          holeIndices.push(vIdx - 1 - firstHoleIdx, vIdx - firstHoleIdx);\n        }\n      }\n    }\n\n    const groups = [{ indices: outerIndices, vertices: outerVertices }];\n\n    if (holes.length) {\n      groups.push({ indices: holeIndices, vertices: holeVertices });\n    }\n\n    return groups;\n  }\n\n  function genMultiPolygon(coords, r) {\n    const outer = { vertices: [], indices: [] };\n    const holes = { vertices: [], indices: [] };\n\n    coords.map(c => genPolygon(c, r)).forEach(([newOuter, newHoles]) => {\n      concatGroup(outer, newOuter);\n      newHoles && concatGroup(holes, newHoles);\n    });\n\n    const groups = [outer];\n    holes.vertices.length && groups.push(holes);\n\n    return groups;\n  }\n}\n\nGeoJsonGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nGeoJsonGeometry.prototype.constructor = GeoJsonGeometry;\n\n//\n\nfunction concatGroup(main, extra) {\n  const prevVertCnt = Math.round(main.vertices.length / 3);\n  concatArr(main.vertices, extra.vertices);\n  concatArr(main.indices, extra.indices.map(ind => ind + prevVertCnt));\n}\n\nfunction concatArr(target, src) {\n  for (let e of src) target.push(e);\n}\n\nfunction polar2Cartesian(lat, lng, r = 0) {\n  const phi = (90 - lat) * Math.PI / 180;\n  const theta = (90 - lng) * Math.PI / 180;\n  return [\n    r * Math.sin(phi) * Math.cos(theta), // x\n    r * Math.cos(phi), // y\n    r * Math.sin(phi) * Math.sin(theta) // z\n  ];\n}\n\nexport { GeoJsonGeometry };\n"],"names":["getInterpolatedVals","start","end","numPnts","result","i","push","interpolateLine","lineCoords","maxDegDistance","prevPnt","forEach","pnt","dist","Math","sqrt","pow","numAdditionalPnts","floor","lngs","lats","len","length","THREE","window","BufferGeometry","Float32BufferAttribute","Geometry","GeoJsonGeometry","geoJson","radius","resolution","call","type","parameters","groups","Point","genPoint","MultiPoint","genMultiPoint","LineString","genLineString","MultiLineString","genMultiLineString","Polygon","genPolygon","MultiPolygon","genMultiPolygon","coordinates","indices","vertices","groupCnt","newG","prevIndCnt","concatGroup","addGroup","setIndex","setAttribute","coords","r","polar2Cartesian","map","c","newPnt","coords3d","lng","lat","earcut","flatten","numPoints","round","vIdx","newLine","coordsSegment","holes","firstHoleIdx","Infinity","outerVertices","slice","holeVertices","holesIdx","Set","outerIndices","holeIndices","has","outer","newOuter","newHoles","prototype","Object","create","constructor","main","extra","prevVertCnt","concatArr","ind","target","src","e","phi","PI","theta","sin","cos"],"mappings":"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"}