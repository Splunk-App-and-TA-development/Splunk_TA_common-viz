{"version":3,"file":"three-conic-polygon-geometry.js","sources":["../node_modules/earcut/src/earcut.js","../src/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","import {\n  BufferGeometry,\n  Float32BufferAttribute,\n  Geometry\n} from 'three';\n\nconst THREE = window.THREE\n  ? window.THREE // Prefer consumption from global THREE, if exists\n  : {\n  BufferGeometry,\n  Float32BufferAttribute,\n  Geometry\n};\n\nimport earcut from 'earcut';\n\nfunction ConicPolygonGeometry(polygonGeoJson, startHeight, endHeight, closedBottom, closedTop, includeSides) {\n  THREE.Geometry.call(this);\n\n  this.type = 'ConicPolygonGeometry';\n\n  this.parameters = {\n    polygonGeoJson,\n    startHeight,\n    endHeight,\n    closedBottom,\n    closedTop,\n    includeSides\n  };\n\n  this.fromBufferGeometry(new ConicPolygonBufferGeometry(polygonGeoJson, startHeight, endHeight, closedBottom, closedTop, includeSides));\n  this.mergeVertices();\n}\n\nConicPolygonGeometry.prototype = Object.create(THREE.Geometry.prototype);\nConicPolygonGeometry.prototype.constructor = ConicPolygonGeometry;\n\nfunction ConicPolygonBufferGeometry(polygonGeoJson, startHeight, endHeight, closedBottom, closedTop, includeSides) {\n\n  THREE.BufferGeometry.call(this);\n\n  this.type = 'ConicPolygonBufferGeometry';\n\n  this.parameters = {\n    polygonGeoJson,\n    startHeight,\n    endHeight,\n    closedBottom,\n    closedTop,\n    includeSides\n  };\n\n  // defaults\n  startHeight = startHeight || 0;\n  endHeight = endHeight || 1;\n  closedBottom = closedBottom !== undefined ? closedBottom : true;\n  closedTop = closedTop !== undefined ? closedTop : true;\n  includeSides = includeSides !== undefined ? includeSides : true;\n\n  // calc vertices & indices\n  const { vertices: bottomVerts, holes } = generateVertices(startHeight);\n  const { vertices: topVerts } = generateVertices(endHeight);\n  const numPoints = Math.round(topVerts.length / 3);\n  const vertices = [...topVerts, ...bottomVerts];\n\n  let indices = [];\n  let groupCnt = 0; // add groups to apply different materials to torso / caps\n\n  if (includeSides) {\n    const prevIndCnt = indices.length;\n    indices = indices.concat(generateTorso());\n    this.addGroup(prevIndCnt, indices.length - prevIndCnt, groupCnt++);\n  }\n\n  if (closedBottom) {\n    const prevIndCnt = indices.length;\n    indices = indices.concat(generateCap(false));\n    this.addGroup(prevIndCnt, indices.length - prevIndCnt, groupCnt++);\n  }\n\n  if (closedTop) {\n    const prevIndCnt = indices.length;\n    indices = indices.concat(generateCap(true));\n    this.addGroup(prevIndCnt, indices.length - prevIndCnt, groupCnt++);\n  }\n\n  // build geometry\n  this.setIndex(indices);\n  this.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n\n  //\n\n  function generateVertices(altitude) {\n    const coords3d = polygonGeoJson.map(coords => coords.map(([lng, lat]) => polar2Cartesian(lat, lng, altitude)));\n    // returns { vertices, holes, coordinates }. Each point generates 3 vertice items (x,y,z).\n    return earcut.flatten(coords3d);\n  }\n\n  function generateTorso() {\n    const holesIdx = new Set(holes);\n    let lastHoleIdx = 0;\n\n    const indices = [];\n    for (let v0Idx = 0; v0Idx < numPoints; v0Idx++) {\n      let v1Idx = v0Idx + 1; // next point\n      if (v1Idx === numPoints) {\n        v1Idx = lastHoleIdx; // close final loop\n      } else if (holesIdx.has(v1Idx)) {\n        const holeIdx = v1Idx;\n        v1Idx = lastHoleIdx; // close hole loop\n        lastHoleIdx = holeIdx;\n      }\n\n      // Each pair of coords generates two triangles (faces)\n      indices.push(v0Idx, v0Idx + numPoints, v1Idx + numPoints);\n      indices.push(v1Idx + numPoints, v1Idx, v0Idx);\n    }\n\n    return indices;\n  }\n\n  function generateCap(top = true) {\n    // !! using the 3d coords generates shapes with the wrong winding, connecting the outsides of the contour\n    // so we derive the indexes from the lat,lng coordinates directly\n    // let capIndices = earcut(top ? topVerts : bottomVerts, holes, 3);\n    let capIndices = earcut(earcut.flatten(polygonGeoJson).vertices, holes, 2);\n\n    !top && (capIndices = capIndices.map(v => v + numPoints)); // translate bottom indices\n\n    return capIndices;\n  }\n}\n\nConicPolygonBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\nConicPolygonBufferGeometry.prototype.constructor = ConicPolygonBufferGeometry;\n\n//\n\nfunction polar2Cartesian(lat, lng, r = 0) {\n  const phi = (90 - lat) * Math.PI / 180;\n  const theta = (90 - lng) * Math.PI / 180;\n  return [\n    r * Math.sin(phi) * Math.cos(theta), // x\n    r * Math.cos(phi), // y\n    r * Math.sin(phi) * Math.sin(theta) // z\n  ];\n}\n\nexport { ConicPolygonGeometry, ConicPolygonBufferGeometry };\n"],"names":["THREE","window","BufferGeometry","Float32BufferAttribute","Geometry","ConicPolygonGeometry","polygonGeoJson","startHeight","endHeight","closedBottom","closedTop","includeSides","call","type","parameters","fromBufferGeometry","ConicPolygonBufferGeometry","mergeVertices","prototype","Object","create","constructor","undefined","generateVertices","bottomVerts","vertices","holes","topVerts","numPoints","Math","round","length","indices","groupCnt","prevIndCnt","concat","generateTorso","addGroup","generateCap","setIndex","setAttribute","altitude","coords3d","map","coords","lng","lat","polar2Cartesian","earcut","flatten","holesIdx","Set","lastHoleIdx","v0Idx","v1Idx","has","holeIdx","push","top","capIndices","v","r","phi","PI","theta","sin","cos"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEA,YAAc,GAAG,MAAM,CAAC;EACxB,aAAsB,GAAG,MAAM,CAAC;;EAEhC,SAAS,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE;;MAEpC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;;MAEf,IAAI,QAAQ,GAAG,WAAW,IAAI,WAAW,CAAC,MAAM;UAC5C,QAAQ,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM;UACxD,SAAS,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC;UACpD,SAAS,GAAG,EAAE,CAAC;;MAEnB,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,EAAE,OAAO,SAAS,CAAC;;MAEtE,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;;MAE1C,IAAI,QAAQ,EAAE,SAAS,GAAG,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;;;MAG5E,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,EAAE;UACxB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACtB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;UAEtB,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,GAAG,EAAE;cACtC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;cACZ,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;cAChB,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;cACvB,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;cACvB,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;cACvB,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;WAC1B;;;UAGD,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;UAC7C,OAAO,GAAG,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;OAC7C;;MAED,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;;MAE7D,OAAO,SAAS,CAAC;GACpB;;;EAGD,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE;MAClD,IAAI,CAAC,EAAE,IAAI,CAAC;;MAEZ,IAAI,SAAS,MAAM,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;UACvD,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;OACvF,MAAM;UACH,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;OAC9F;;MAED,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;UACjC,UAAU,CAAC,IAAI,CAAC,CAAC;UACjB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;OACpB;;MAED,OAAO,IAAI,CAAC;GACf;;;EAGD,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE;MAC9B,IAAI,CAAC,KAAK,EAAE,OAAO,KAAK,CAAC;MACzB,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC;;MAEtB,IAAI,CAAC,GAAG,KAAK;UACT,KAAK,CAAC;MACV,GAAG;UACC,KAAK,GAAG,KAAK,CAAC;;UAEd,IAAI,CAAC,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;cACpE,UAAU,CAAC,CAAC,CAAC,CAAC;cACd,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;cACjB,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,MAAM;cACxB,KAAK,GAAG,IAAI,CAAC;;WAEhB,MAAM;cACH,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;WACd;OACJ,QAAQ,KAAK,IAAI,CAAC,KAAK,GAAG,EAAE;;MAE7B,OAAO,GAAG,CAAC;GACd;;;EAGD,SAAS,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;MAClE,IAAI,CAAC,GAAG,EAAE,OAAO;;;MAGjB,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;;MAE3D,IAAI,IAAI,GAAG,GAAG;UACV,IAAI,EAAE,IAAI,CAAC;;;MAGf,OAAO,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,EAAE;UAC1B,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;UAChB,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;;UAEhB,IAAI,OAAO,GAAG,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE;;cAE9D,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cAC7B,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cAC5B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;;cAE7B,UAAU,CAAC,GAAG,CAAC,CAAC;;;cAGhB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;cAChB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;;cAEjB,SAAS;WACZ;;UAED,GAAG,GAAG,IAAI,CAAC;;;UAGX,IAAI,GAAG,KAAK,IAAI,EAAE;;cAEd,IAAI,CAAC,IAAI,EAAE;kBACP,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;;eAG3E,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE;kBACnB,GAAG,GAAG,sBAAsB,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;kBAChE,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;;eAG7D,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE;kBACnB,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;eACzD;;cAED,MAAM;WACT;OACJ;GACJ;;;EAGD,SAAS,KAAK,CAAC,GAAG,EAAE;MAChB,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI;UACZ,CAAC,GAAG,GAAG;UACP,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;;MAEjB,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;;;MAGrC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;;MAEtB,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE;UACnB,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACvD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;UAC/C,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;OACd;;MAED,OAAO,IAAI,CAAC;GACf;;EAED,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;MAC3C,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI;UACZ,CAAC,GAAG,GAAG;UACP,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;;MAEjB,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;;;MAGrC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACrE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACrE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACrE,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;;MAG1E,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC;UAChD,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;;MAErD,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK;UACb,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;;;MAGlB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;UACzC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI;cAChC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACvD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;UAC/C,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;;UAEZ,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI;cAChC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACvD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;UAC/C,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;OACf;;;MAGD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;UACrB,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI;cAChC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACvD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;UAC/C,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;OACf;;;MAGD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;UACrB,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI;cAChC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACvD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;UAC/C,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;OACf;;MAED,OAAO,IAAI,CAAC;GACf;;;EAGD,SAAS,sBAAsB,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE;MACnD,IAAI,CAAC,GAAG,KAAK,CAAC;MACd,GAAG;UACC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI;cACV,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;UAEpB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;;cAE5F,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cAC1B,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;cAC1B,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;;;cAG1B,UAAU,CAAC,CAAC,CAAC,CAAC;cACd,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;;cAEnB,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;WACjB;UACD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;OACd,QAAQ,CAAC,KAAK,KAAK,EAAE;;MAEtB,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;GAC1B;;;EAGD,SAAS,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;;MAE7D,IAAI,CAAC,GAAG,KAAK,CAAC;MACd,GAAG;UACC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;UACpB,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE;cACjB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;;kBAEtC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;;kBAG3B,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;kBAC5B,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;;;kBAG5B,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;kBACrD,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;kBACrD,OAAO;eACV;cACD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;WACd;UACD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;OACd,QAAQ,CAAC,KAAK,KAAK,EAAE;GACzB;;;EAGD,SAAS,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,EAAE;MACvD,IAAI,KAAK,GAAG,EAAE;UACV,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC;;MAE7B,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;UAChD,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;UAC7B,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;UAC3D,IAAI,GAAG,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;UAChD,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;UAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;OACjC;;MAED,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;MAGrB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UAC/B,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;UACnC,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;OACvD;;MAED,OAAO,SAAS,CAAC;GACpB;;EAED,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;MACpB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GACpB;;;EAGD,SAAS,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE;MACpC,SAAS,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;MAC5C,IAAI,SAAS,EAAE;UACX,IAAI,CAAC,GAAG,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;UACtC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;OAC3B;GACJ;;;EAGD,SAAS,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE;MACrC,IAAI,CAAC,GAAG,SAAS;UACb,EAAE,GAAG,IAAI,CAAC,CAAC;UACX,EAAE,GAAG,IAAI,CAAC,CAAC;UACX,EAAE,GAAG,CAAC,QAAQ;UACd,CAAC,CAAC;;;;MAIN,GAAG;UACC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;cACjD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;cAC/D,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE;kBACnB,EAAE,GAAG,CAAC,CAAC;kBACP,IAAI,CAAC,KAAK,EAAE,EAAE;sBACV,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;sBACzB,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC;mBACtC;kBACD,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;eACnC;WACJ;UACD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;OACd,QAAQ,CAAC,KAAK,SAAS,EAAE;;MAE1B,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;;MAEpB,IAAI,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;;;;;;MAMxB,IAAI,IAAI,GAAG,CAAC;UACR,EAAE,GAAG,CAAC,CAAC,CAAC;UACR,EAAE,GAAG,CAAC,CAAC,CAAC;UACR,MAAM,GAAG,QAAQ;UACjB,GAAG,CAAC;;MAER,CAAC,GAAG,CAAC,CAAC;;MAEN,GAAG;UACC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;kBAChC,eAAe,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;;cAErF,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;cAEtC,IAAI,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC;mBACrB,GAAG,GAAG,MAAM,KAAK,GAAG,KAAK,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;kBAClG,CAAC,GAAG,CAAC,CAAC;kBACN,MAAM,GAAG,GAAG,CAAC;eAChB;WACJ;;UAED,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;OACd,QAAQ,CAAC,KAAK,IAAI,EAAE;;MAErB,OAAO,CAAC,CAAC;GACZ;;;EAGD,SAAS,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE;MAChC,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACrE;;;EAGD,SAAS,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;MAC5C,IAAI,CAAC,GAAG,KAAK,CAAC;MACd,GAAG;UACC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;UAC9D,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;UACjB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;UACjB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;OACd,QAAQ,CAAC,KAAK,KAAK,EAAE;;MAEtB,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;MACrB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;;MAEf,UAAU,CAAC,CAAC,CAAC,CAAC;GACjB;;;;EAID,SAAS,UAAU,CAAC,IAAI,EAAE;MACtB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK;UACzC,MAAM,GAAG,CAAC,CAAC;;MAEf,GAAG;UACC,CAAC,GAAG,IAAI,CAAC;UACT,IAAI,GAAG,IAAI,CAAC;UACZ,IAAI,GAAG,IAAI,CAAC;UACZ,SAAS,GAAG,CAAC,CAAC;;UAEd,OAAO,CAAC,EAAE;cACN,SAAS,EAAE,CAAC;cACZ,CAAC,GAAG,CAAC,CAAC;cACN,KAAK,GAAG,CAAC,CAAC;cACV,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;kBACzB,KAAK,EAAE,CAAC;kBACR,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;kBACZ,IAAI,CAAC,CAAC,EAAE,MAAM;eACjB;cACD,KAAK,GAAG,MAAM,CAAC;;cAEf,OAAO,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;;kBAElC,IAAI,KAAK,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;sBAClD,CAAC,GAAG,CAAC,CAAC;sBACN,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;sBACZ,KAAK,EAAE,CAAC;mBACX,MAAM;sBACH,CAAC,GAAG,CAAC,CAAC;sBACN,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;sBACZ,KAAK,EAAE,CAAC;mBACX;;kBAED,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;uBACpB,IAAI,GAAG,CAAC,CAAC;;kBAEd,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;kBACf,IAAI,GAAG,CAAC,CAAC;eACZ;;cAED,CAAC,GAAG,CAAC,CAAC;WACT;;UAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;UAClB,MAAM,IAAI,CAAC,CAAC;;OAEf,QAAQ,SAAS,GAAG,CAAC,EAAE;;MAExB,OAAO,IAAI,CAAC;GACf;;;EAGD,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;;MAEvC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC;MACjC,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC;;MAEjC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;MAChC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;MAChC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;MAChC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;;MAEhC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;MAChC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;MAChC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;MAChC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;;MAEhC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GACvB;;;EAGD,SAAS,WAAW,CAAC,KAAK,EAAE;MACxB,IAAI,CAAC,GAAG,KAAK;UACT,QAAQ,GAAG,KAAK,CAAC;MACrB,GAAG;UACC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;UAC/E,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;OACd,QAAQ,CAAC,KAAK,KAAK,EAAE;;MAEtB,OAAO,QAAQ,CAAC;GACnB;;;EAGD,SAAS,eAAe,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;MACrD,OAAO,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;aAClD,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;aAClD,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;GAC7D;;;EAGD,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE;MAC3B,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;cAC/D,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;eAC/D,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAC/C,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;GACvF;;;EAGD,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MACnB,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;GAChE;;;EAGD,SAAS,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE;MACpB,OAAO,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;GACzC;;;EAGD,SAAS,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;MAChC,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;MAChC,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;MAChC,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;MAChC,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;MAEhC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC;;MAExC,IAAI,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;MACnD,IAAI,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;MACnD,IAAI,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;MACnD,IAAI,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;;MAEnD,OAAO,KAAK,CAAC;GAChB;;;EAGD,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;MACxB,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;GAC3H;;EAED,SAAS,IAAI,CAAC,GAAG,EAAE;MACf,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;GACzC;;;EAGD,SAAS,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE;MAC7B,IAAI,CAAC,GAAG,CAAC,CAAC;MACV,GAAG;UACC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;kBAC9D,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;UACjD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;OACd,QAAQ,CAAC,KAAK,CAAC,EAAE;;MAElB,OAAO,KAAK,CAAC;GAChB;;;EAGD,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE;MACzB,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;UAC9B,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;UAClD,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;GACxD;;;EAGD,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;MACxB,IAAI,CAAC,GAAG,CAAC;UACL,MAAM,GAAG,KAAK;UACd,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;UACpB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MACzB,GAAG;UACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;mBAC/C,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;cACjE,MAAM,GAAG,CAAC,MAAM,CAAC;UACrB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;OACd,QAAQ,CAAC,KAAK,CAAC,EAAE;;MAElB,OAAO,MAAM,CAAC;GACjB;;;;EAID,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;MACxB,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAC5B,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAC5B,EAAE,GAAG,CAAC,CAAC,IAAI;UACX,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;;MAEhB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;MACX,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;;MAEX,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;MACb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;;MAEb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;MACb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;;MAEb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;MACb,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;;MAEb,OAAO,EAAE,CAAC;GACb;;;EAGD,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;MAC/B,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;MAE1B,IAAI,CAAC,IAAI,EAAE;UACP,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;UACX,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;;OAEd,MAAM;UACH,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;UACnB,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;UACd,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;UACnB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;OACjB;MACD,OAAO,CAAC,CAAC;GACZ;;EAED,SAAS,UAAU,CAAC,CAAC,EAAE;MACnB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;;MAErB,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;MACrC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;GACxC;;EAED,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;MAEnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;;;MAGX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;MACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;;;MAGX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;MACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;;MAGjB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;;;MAGd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;MAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;;MAGlB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;GACxB;;;;EAID,MAAM,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE,SAAS,EAAE;MAC5D,IAAI,QAAQ,GAAG,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC;MACjD,IAAI,QAAQ,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;;MAE7D,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;MAC/D,IAAI,QAAQ,EAAE;UACV,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;cACpD,IAAI,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;cACjC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;cAC/D,WAAW,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;WAC9D;OACJ;;MAED,IAAI,aAAa,GAAG,CAAC,CAAC;MACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;UACtC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;UAC3B,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;UAC/B,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;UAC/B,aAAa,IAAI,IAAI,CAAC,GAAG;cACrB,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;cACjD,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;OAC1D;;MAED,OAAO,WAAW,KAAK,CAAC,IAAI,aAAa,KAAK,CAAC,GAAG,CAAC;UAC/C,IAAI,CAAC,GAAG,CAAC,CAAC,aAAa,GAAG,WAAW,IAAI,WAAW,CAAC,CAAC;GAC7D,CAAC;;EAEF,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;MACvC,IAAI,GAAG,GAAG,CAAC,CAAC;MACZ,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE;UAClD,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UACzD,CAAC,GAAG,CAAC,CAAC;OACT;MACD,OAAO,GAAG,CAAC;GACd;;;EAGD,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;MAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;UACvB,MAAM,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,CAAC;UACnD,SAAS,GAAG,CAAC,CAAC;;MAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;cACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;WACrE;UACD,IAAI,CAAC,GAAG,CAAC,EAAE;cACP,SAAS,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;cAChC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;WAChC;OACJ;MACD,OAAO,MAAM,CAAC;GACjB,CAAC;;;EC7pBF,IAAMA,KAAK,GAAGC,MAAM,CAACD,KAAP,GACVC,MAAM,CAACD,KADG;EAAA,EAEV;EACFE,EAAAA,cAAc,EAAdA,oBADE;EAEFC,EAAAA,sBAAsB,EAAtBA,4BAFE;EAGFC,EAAAA,QAAQ,EAARA;EAHE,CAFJ;AAQA;EAEA,SAASC,oBAAT,CAA8BC,cAA9B,EAA8CC,WAA9C,EAA2DC,SAA3D,EAAsEC,YAAtE,EAAoFC,SAApF,EAA+FC,YAA/F,EAA6G;EAC3GX,EAAAA,KAAK,CAACI,QAAN,CAAeQ,IAAf,CAAoB,IAApB;EAEA,OAAKC,IAAL,GAAY,sBAAZ;EAEA,OAAKC,UAAL,GAAkB;EAChBR,IAAAA,cAAc,EAAdA,cADgB;EAEhBC,IAAAA,WAAW,EAAXA,WAFgB;EAGhBC,IAAAA,SAAS,EAATA,SAHgB;EAIhBC,IAAAA,YAAY,EAAZA,YAJgB;EAKhBC,IAAAA,SAAS,EAATA,SALgB;EAMhBC,IAAAA,YAAY,EAAZA;EANgB,GAAlB;EASA,OAAKI,kBAAL,CAAwB,IAAIC,0BAAJ,CAA+BV,cAA/B,EAA+CC,WAA/C,EAA4DC,SAA5D,EAAuEC,YAAvE,EAAqFC,SAArF,EAAgGC,YAAhG,CAAxB;EACA,OAAKM,aAAL;EACD;;EAEDZ,oBAAoB,CAACa,SAArB,GAAiCC,MAAM,CAACC,MAAP,CAAcpB,KAAK,CAACI,QAAN,CAAec,SAA7B,CAAjC;EACAb,oBAAoB,CAACa,SAArB,CAA+BG,WAA/B,GAA6ChB,oBAA7C;;EAEA,SAASW,0BAAT,CAAoCV,cAApC,EAAoDC,WAApD,EAAiEC,SAAjE,EAA4EC,YAA5E,EAA0FC,SAA1F,EAAqGC,YAArG,EAAmH;EAEjHX,EAAAA,KAAK,CAACE,cAAN,CAAqBU,IAArB,CAA0B,IAA1B;EAEA,OAAKC,IAAL,GAAY,4BAAZ;EAEA,OAAKC,UAAL,GAAkB;EAChBR,IAAAA,cAAc,EAAdA,cADgB;EAEhBC,IAAAA,WAAW,EAAXA,WAFgB;EAGhBC,IAAAA,SAAS,EAATA,SAHgB;EAIhBC,IAAAA,YAAY,EAAZA,YAJgB;EAKhBC,IAAAA,SAAS,EAATA,SALgB;EAMhBC,IAAAA,YAAY,EAAZA;EANgB,GAAlB,CANiH;;EAgBjHJ,EAAAA,WAAW,GAAGA,WAAW,IAAI,CAA7B;EACAC,EAAAA,SAAS,GAAGA,SAAS,IAAI,CAAzB;EACAC,EAAAA,YAAY,GAAGA,YAAY,KAAKa,SAAjB,GAA6Bb,YAA7B,GAA4C,IAA3D;EACAC,EAAAA,SAAS,GAAGA,SAAS,KAAKY,SAAd,GAA0BZ,SAA1B,GAAsC,IAAlD;EACAC,EAAAA,YAAY,GAAGA,YAAY,KAAKW,SAAjB,GAA6BX,YAA7B,GAA4C,IAA3D,CApBiH;;EAAA,0BAuBxEY,gBAAgB,CAAChB,WAAD,CAvBwD;EAAA,MAuB/FiB,WAvB+F,qBAuBzGC,QAvByG;EAAA,MAuBlFC,KAvBkF,qBAuBlFA,KAvBkF;;EAAA,2BAwBlFH,gBAAgB,CAACf,SAAD,CAxBkE;EAAA,MAwB/FmB,QAxB+F,sBAwBzGF,QAxByG;;EAyBjH,MAAMG,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,MAAT,GAAkB,CAA7B,CAAlB;EACA,MAAMN,QAAQ,gCAAOE,QAAP,sBAAoBH,WAApB,EAAd;EAEA,MAAIQ,OAAO,GAAG,EAAd;EACA,MAAIC,QAAQ,GAAG,CAAf,CA7BiH;;EA+BjH,MAAItB,YAAJ,EAAkB;EAChB,QAAMuB,UAAU,GAAGF,OAAO,CAACD,MAA3B;EACAC,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAeC,aAAa,EAA5B,CAAV;EACA,SAAKC,QAAL,CAAcH,UAAd,EAA0BF,OAAO,CAACD,MAAR,GAAiBG,UAA3C,EAAuDD,QAAQ,EAA/D;EACD;;EAED,MAAIxB,YAAJ,EAAkB;EAChB,QAAMyB,WAAU,GAAGF,OAAO,CAACD,MAA3B;EACAC,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAeG,WAAW,CAAC,KAAD,CAA1B,CAAV;EACA,SAAKD,QAAL,CAAcH,WAAd,EAA0BF,OAAO,CAACD,MAAR,GAAiBG,WAA3C,EAAuDD,QAAQ,EAA/D;EACD;;EAED,MAAIvB,SAAJ,EAAe;EACb,QAAMwB,YAAU,GAAGF,OAAO,CAACD,MAA3B;EACAC,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAeG,WAAW,CAAC,IAAD,CAA1B,CAAV;EACA,SAAKD,QAAL,CAAcH,YAAd,EAA0BF,OAAO,CAACD,MAAR,GAAiBG,YAA3C,EAAuDD,QAAQ,EAA/D;EACD,GA/CgH;;;EAkDjH,OAAKM,QAAL,CAAcP,OAAd;EACA,OAAKQ,YAAL,CAAkB,UAAlB,EAA8B,IAAIxC,KAAK,CAACG,sBAAV,CAAiCsB,QAAjC,EAA2C,CAA3C,CAA9B,EAnDiH;;EAuDjH,WAASF,gBAAT,CAA0BkB,QAA1B,EAAoC;EAClC,QAAMC,QAAQ,GAAGpC,cAAc,CAACqC,GAAf,CAAmB,UAAAC,MAAM;EAAA,aAAIA,MAAM,CAACD,GAAP,CAAW;EAAA;EAAA,YAAEE,GAAF;EAAA,YAAOC,GAAP;;EAAA,eAAgBC,eAAe,CAACD,GAAD,EAAMD,GAAN,EAAWJ,QAAX,CAA/B;EAAA,OAAX,CAAJ;EAAA,KAAzB,CAAjB,CADkC;;EAGlC,WAAOO,QAAM,CAACC,OAAP,CAAeP,QAAf,CAAP;EACD;;EAED,WAASN,aAAT,GAAyB;EACvB,QAAMc,QAAQ,GAAG,IAAIC,GAAJ,CAAQzB,KAAR,CAAjB;EACA,QAAI0B,WAAW,GAAG,CAAlB;EAEA,QAAMpB,OAAO,GAAG,EAAhB;;EACA,SAAK,IAAIqB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGzB,SAA5B,EAAuCyB,KAAK,EAA5C,EAAgD;EAC9C,UAAIC,KAAK,GAAGD,KAAK,GAAG,CAApB,CAD8C;;EAE9C,UAAIC,KAAK,KAAK1B,SAAd,EAAyB;EACvB0B,QAAAA,KAAK,GAAGF,WAAR,CADuB;EAExB,OAFD,MAEO,IAAIF,QAAQ,CAACK,GAAT,CAAaD,KAAb,CAAJ,EAAyB;EAC9B,YAAME,OAAO,GAAGF,KAAhB;EACAA,QAAAA,KAAK,GAAGF,WAAR,CAF8B;;EAG9BA,QAAAA,WAAW,GAAGI,OAAd;EACD,OAR6C;;;EAW9CxB,MAAAA,OAAO,CAACyB,IAAR,CAAaJ,KAAb,EAAoBA,KAAK,GAAGzB,SAA5B,EAAuC0B,KAAK,GAAG1B,SAA/C;EACAI,MAAAA,OAAO,CAACyB,IAAR,CAAaH,KAAK,GAAG1B,SAArB,EAAgC0B,KAAhC,EAAuCD,KAAvC;EACD;;EAED,WAAOrB,OAAP;EACD;;EAED,WAASM,WAAT,GAAiC;EAAA,QAAZoB,GAAY,uEAAN,IAAM;EAC/B;EACA;EACA;EACA,QAAIC,UAAU,GAAGX,QAAM,CAACA,QAAM,CAACC,OAAP,CAAe3C,cAAf,EAA+BmB,QAAhC,EAA0CC,KAA1C,EAAiD,CAAjD,CAAvB;EAEA,KAACgC,GAAD,KAASC,UAAU,GAAGA,UAAU,CAAChB,GAAX,CAAe,UAAAiB,CAAC;EAAA,aAAIA,CAAC,GAAGhC,SAAR;EAAA,KAAhB,CAAtB,EAN+B;;EAQ/B,WAAO+B,UAAP;EACD;EACF;;EAED3C,0BAA0B,CAACE,SAA3B,GAAuCC,MAAM,CAACC,MAAP,CAAcpB,KAAK,CAACE,cAAN,CAAqBgB,SAAnC,CAAvC;EACAF,0BAA0B,CAACE,SAA3B,CAAqCG,WAArC,GAAmDL,0BAAnD;;EAIA,SAAS+B,eAAT,CAAyBD,GAAzB,EAA8BD,GAA9B,EAA0C;EAAA,MAAPgB,CAAO,uEAAH,CAAG;EACxC,MAAMC,GAAG,GAAG,CAAC,KAAKhB,GAAN,IAAajB,IAAI,CAACkC,EAAlB,GAAuB,GAAnC;EACA,MAAMC,KAAK,GAAG,CAAC,KAAKnB,GAAN,IAAahB,IAAI,CAACkC,EAAlB,GAAuB,GAArC;EACA,SAAO,CACLF,CAAC,GAAGhC,IAAI,CAACoC,GAAL,CAASH,GAAT,CAAJ,GAAoBjC,IAAI,CAACqC,GAAL,CAASF,KAAT,CADf;EAELH,EAAAA,CAAC,GAAGhC,IAAI,CAACqC,GAAL,CAASJ,GAAT,CAFC;EAGLD,EAAAA,CAAC,GAAGhC,IAAI,CAACoC,GAAL,CAASH,GAAT,CAAJ,GAAoBjC,IAAI,CAACoC,GAAL,CAASD,KAAT,CAHf;EAAA,GAAP;EAKD;;;;;;;;;;;;;"}