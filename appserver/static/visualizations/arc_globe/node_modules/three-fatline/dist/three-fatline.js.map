{"version":3,"file":"three-fatline.js","sources":["../src/LineSegmentsGeometry.js","../src/LineMaterial.js","../src/LineSegments2.js","../src/LineGeometry.js","../src/Line2.js"],"sourcesContent":["/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nimport {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n};\n\nvar LineSegmentsGeometry = function () {\n\n\tTHREE.InstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.setAttribute( 'position', new THREE.Float32BufferAttribute( positions, 3 ) );\n\tthis.setAttribute( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nLineSegmentsGeometry.prototype = Object.assign( Object.create( THREE.InstancedBufferGeometry.prototype ), {\n\n\tconstructor: LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( start );\n\n\t\t\tmatrix.applyToBufferAttribute( end );\n\n\t\t\tstart.data.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new THREE.InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new THREE.InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new THREE.InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new THREE.InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new THREE.WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegements: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new THREE.Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new THREE.Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new THREE.Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tclone: function () {\n\n\t\t// todo\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport default LineSegmentsGeometry;\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nimport {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n};\n\nTHREE.UniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tgapSize: { value: 1 } // todo FIX - maybe change to totalSize\n\n};\n\nTHREE.ShaderLib[ 'line' ] = {\n\n\tuniforms: THREE.UniformsUtils.merge( [\n\t\tTHREE.UniformsLib.common,\n\t\tTHREE.UniformsLib.fog,\n\t\tTHREE.UniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, opacity );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, diffuseColor.a );\n\n\t\t\t#include <premultiplied_alpha_fragment>\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\n\t\t}\n\t\t`\n};\n\nvar LineMaterial = function ( parameters ) {\n\n\tTHREE.ShaderMaterial.call( this, {\n\n\t\ttype: 'LineMaterial',\n\n\t\tuniforms: THREE.UniformsUtils.clone( THREE.ShaderLib[ 'line' ].uniforms ),\n\n\t\tvertexShader: THREE.ShaderLib[ 'line' ].vertexShader,\n\t\tfragmentShader: THREE.ShaderLib[ 'line' ].fragmentShader\n\n\t} );\n\n\tthis.dashed = false;\n\n\tObject.defineProperties( this, {\n\n\t\tcolor: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tlinewidth: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashScale: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdashSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgapSize: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tresolution: {\n\n\t\t\tenumerable: true,\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tthis.setValues( parameters );\n\n};\n\nLineMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\nLineMaterial.prototype.constructor = LineMaterial;\n\nLineMaterial.prototype.isLineMaterial = true;\n\nLineMaterial.prototype.copy = function ( source ) {\n\n\tTHREE.ShaderMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\n\tthis.resolution = source.resolution;\n\n\t// todo\n\n\treturn this;\n\n};\n\n\nexport default LineMaterial;\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\nimport {\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tMesh,\n\tVector3\n} from 'three';\n\nconst THREE = window.THREE\n\t? window.THREE // Prefer consumption from global THREE, if exists\n\t: {\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tMesh,\n\tVector3\n};\n\nimport LineSegmentsGeometry from \"./LineSegmentsGeometry.js\";\nimport LineMaterial from \"./LineMaterial.js\";\n\nvar LineSegments2 = function ( geometry, material ) {\n\n\tTHREE.Mesh.call( this );\n\n\tthis.type = 'LineSegments2';\n\n\tthis.geometry = geometry !== undefined ? geometry : new LineSegmentsGeometry();\n\tthis.material = material !== undefined ? material : new LineMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nLineSegments2.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\n\n\tconstructor: LineSegments2,\n\n\tisLineSegments2: true,\n\n\tcomputeLineDistances: ( function () { // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\t\tvar start = new THREE.Vector3();\n\t\tvar end = new THREE.Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tvar instanceStart = geometry.attributes.instanceStart;\n\t\t\tvar instanceEnd = geometry.attributes.instanceEnd;\n\t\t\tvar lineDistances = new Float32Array( 2 * instanceStart.data.count );\n\n\t\t\tfor ( var i = 0, j = 0, l = instanceStart.data.count; i < l; i ++, j += 2 ) {\n\n\t\t\t\tstart.fromBufferAttribute( instanceStart, i );\n\t\t\t\tend.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + start.distanceTo( end );\n\n\t\t\t}\n\n\t\t\tvar instanceDistanceBuffer = new THREE.InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\t\tgeometry.setAttribute( 'instanceDistanceStart', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\t\tgeometry.setAttribute( 'instanceDistanceEnd', new THREE.InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport default LineSegments2;\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\n\nimport LineSegmentsGeometry from \"./LineSegmentsGeometry.js\";\n\nvar LineGeometry = function () {\n\n\tLineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\n\n\tconstructor: LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport default LineGeometry;\n","/**\n * @author WestLangley / http://github.com/WestLangley\n *\n */\n\n\nimport LineSegments2 from \"./LineSegments2.js\";\nimport LineGeometry from \"./LineGeometry.js\";\nimport LineMaterial from \"./LineMaterial.js\";\n\nvar Line2 = function ( geometry, material ) {\n\n\tLineSegments2.call( this );\n\n\tthis.type = 'Line2';\n\n\tthis.geometry = geometry !== undefined ? geometry : new LineGeometry();\n\tthis.material = material !== undefined ? material : new LineMaterial( { color: Math.random() * 0xffffff } );\n\n};\n\nLine2.prototype = Object.assign( Object.create( LineSegments2.prototype ), {\n\n\tconstructor: Line2,\n\n\tisLine2: true,\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport default Line2;\n"],"names":["THREE","window","Box3","Float32BufferAttribute","InstancedBufferGeometry","InstancedInterleavedBuffer","InterleavedBufferAttribute","Sphere","Vector3","WireframeGeometry","LineSegmentsGeometry","call","type","positions","uvs","index","setIndex","setAttribute","prototype","Object","assign","create","constructor","isLineSegmentsGeometry","applyMatrix","matrix","start","attributes","instanceStart","end","instanceEnd","undefined","applyToBufferAttribute","data","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","array","lineSegments","Float32Array","Array","isArray","instanceBuffer","setColors","colors","instanceColorBuffer","fromWireframeGeometry","geometry","position","fromEdgesGeometry","fromMesh","mesh","fromLineSegements","isGeometry","vertices","isBufferGeometry","box","setFromBufferAttribute","union","vector","center","getCenter","maxRadiusSq","i","il","count","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN","console","error","toJSON","clone","copy","ShaderLib","ShaderMaterial","UniformsLib","UniformsUtils","Vector2","line","linewidth","value","resolution","dashScale","dashSize","gapSize","uniforms","merge","common","fog","vertexShader","fragmentShader","LineMaterial","parameters","dashed","defineProperties","color","enumerable","get","diffuse","set","setValues","isLineMaterial","source","Mesh","LineSegments2","material","random","isLineSegments2","computeLineDistances","lineDistances","j","l","distanceTo","instanceDistanceBuffer","LineGeometry","isLineGeometry","length","points","fromLine","Line2","isLine2"],"mappings":"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"}